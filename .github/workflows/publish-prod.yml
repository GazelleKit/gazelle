name: Production

on:
  push:
    branches: main

jobs:
  # build-fortress:
  #   name: Build Fortress
  #   runs-on: Ubuntu-Latest

  #   defaults:
  #     run:
  #       shell: pwsh

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: "7.0.x"

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Get Package Version
  #       run: |
  #         Set-Location "./projects/Fortress"
  #         $PackageVersion = (Get-Content "global.config" | ConvertFrom-Json).version
  #         echo "PACKAGE_VERSION=$PackageVersion" | Out-File -FilePath $Env:GITHUB_ENV -Append

  #     - name: Restore Projects
  #       run: ./scripts/Restore-Project.ps1

  #     - name: Check Code Formatting
  #       run: |
  #         Set-Location "./projects"
  #         dotnet fantomas "." --recurse --check

  #     - name: Run Test Suite
  #       run: |
  #         Set-Location "./projects"
  #         dotnet test

  #     - name: Build .NET Projects
  #       run: |
  #         Set-Location "./projects"
  #         dotnet build -c "Release" -p:PackageVersion=${{ env.PACKAGE_VERSION }}
      
  #     - name: Invoke Fable Transpiler
  #       run: |
  #         Set-Location "./projects/Fortress"
  #         npm version ${{ env.PACKAGE_VERSION }}
  #         npm run build

  #     - name: Upload NuGet Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: nuget-package
  #         path: ./projects/Fortress/bin/Release/*.nupkg

  #     - name: Upload JS Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: js-artifacts
  #         path: ./projects/Fortress/fable_build/*.js

  # publish-to-nuget-gallery:
  #   name: Publish to NuGet Gallery
  #   runs-on: Ubuntu-Latest
  #   environment: Production
  #   needs: build-fortress

  #   defaults:
  #     run:
  #       shell: pwsh

  #   steps:
  #     - name: Download NuGet Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: nuget-package

  #     - name: Publish to NuGet Gallery
  #       run: | 
  #         dotnet nuget push *.nupkg `
  #           --api-key ${{ secrets.NUGET_KEY }} `
  #           --source "https://api.nuget.org/v3/index.json" `
  #           --skip-duplicate

  build_azure_resources:
    name: Build Azure Resources
    runs-on: Ubuntu-Latest
    environment: Production

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Infrastructure
        run: |
          az deployment group create `
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} `
            --template-file "./.azure/templates/main.bicep"

        # uses: azure/arm-deploy@v1
        # with:
        #   template: ./.azure/templates/main.bicep
        #   failOnStdErr: false
        #   deploymentMode: complete
        #   deploymentName: fortress-run-${{ github.run_id }}
        #   subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        #   resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}