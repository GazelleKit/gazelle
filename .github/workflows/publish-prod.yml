name: Production

on:
  push:
    branches: main

jobs:
  build-fortress:
    name: Build Fortress
    runs-on: Ubuntu-Latest

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get Package Version
        run: |
          Set-Location "./projects/Fortress"
          $PackageVersion = (Get-Content "global.config" | ConvertFrom-Json).version
          echo "PACKAGE_VERSION=$PackageVersion" | Out-File -FilePath $Env:GITHUB_ENV -Append

      - name: Restore Projects
        run: ./scripts/Restore-Project.ps1

      - name: Check Code Formatting
        run: |
          Set-Location "./projects"
          dotnet fantomas "." --recurse --check

      - name: Run Test Suite
        run: |
          Set-Location "./projects"
          dotnet test

      - name: Build .NET Projects
        run: |
          Set-Location "./projects"
          dotnet publish `
            -c "Release" `
            -p:PackageVersion=${{ env.PACKAGE_VERSION }} `
            -o ${{ env.DOTNET_ROOT }}/app
      
      - name: Invoke Fable Transpiler
        run: |
          Set-Location "./projects/Fortress"
          npm version ${{ env.PACKAGE_VERSION }}
          npm run build

      - name: Upload .NET Web App Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-app
          path: ${{ env.DOTNET_ROOT }}/app

      - name: Upload NuGet Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ./projects/Fortress/bin/Release/*.nupkg

      - name: Upload JS Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: js-artifacts
          path: ./projects/Fortress/fable_build/*.js

  publish-to-nuget-gallery:
    name: Publish to NuGet Gallery
    runs-on: Ubuntu-Latest
    environment: Production
    needs: build-fortress

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Download NuGet Artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package

      - name: Publish to NuGet Gallery
        run: | 
          dotnet nuget push *.nupkg `
            --api-key ${{ secrets.NUGET_KEY }} `
            --source "https://api.nuget.org/v3/index.json" `
            --skip-duplicate

  build-azure-resources:
    name: Build Azure Resources
    runs-on: Ubuntu-Latest
    environment: Production

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure
        run: |
          az login --service-principal `
            -u ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_ID }} `
            -p ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET }} `
            --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy Infrastructure
        run: |
          az deployment group create `
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} `
            --template-file "./.azure/templates/main.bicep" `
            --parameters webAppName=${{ secrets.AZURE_WEB_APP_NAME }}

  publish-web-app:
    name: Publish Web App
    runs-on: Ubuntu-Latest
    environment: Production
    needs: [build-fortress, build-azure-resources]

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure
        run: |
          az login --service-principal `
            -u ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_ID }} `
            -p ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET }} `
            --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Publish to App Service
        uses: azure/webapps-deploy@v2
        with:
          slot-name: Production
          app-name: ${{ secrets.AZURE_WEB_APP_NAME }}
          package: dotnet-app